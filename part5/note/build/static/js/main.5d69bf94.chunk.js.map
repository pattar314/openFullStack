{"version":3,"sources":["components/Note.js","services/notes.js","services/login.js","components/Togglable.js","components/NoteForm.js","components/LoginForm.js","App.js","index.js"],"names":["Note","note","toggleImportant","label","important","content","onClick","baseUrl","token","create","newObject","a","config","headers","Authorization","axios","post","response","data","getAll","get","then","update","id","put","catch","error","console","log","setToken","newToken","login","credentials","logout","window","localStorage","removeItem","Togglable","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","buttonLabel","children","NoteForm","addNote","newNote","setNewNote","onSubmit","value","onChange","event","target","placeholder","type","LoginForm","handleLogin","handleUsernameChange","handlePasswordChange","username","password","loginVisible","name","App","notes","setNotes","showAll","setShowAll","setUsername","setPassword","setErrorMessage","user","setUser","useEffect","noteService","initialNotes","err","loggedUserJSON","getItem","JSON","parse","preventDefault","loginService","setItem","stringify","setTimeout","notesToShow","filter","noteObject","returnedNote","concat","map","i","toggleImportance","find","n","changedNote","alert","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d69bf94.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportant }) => {\r\n\r\n  const label = note.important ? 'make not important': 'make important'\r\n\r\n  return (\r\n    <li>{note.content} \r\n    <button onClick={toggleImportant} >{label}</button></li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n    token = `bearer ${ newToken }`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (newObject) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config);\r\n    return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    let request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport default { getAll, create, update, setToken }\r\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst logout = () => {\n  window.localStorage.removeItem('loggedNoteappUser')\n}\n\nexport default { login, logout }","import React, { useState } from 'react'\n\nconst Togglable = (props) => {\n  \n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <>\n    <div style={hideWhenVisible}>\n      <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n    </div>\n    <div style={showWhenVisible}>\n      {props.children}\n      <button onClick={toggleVisibility}>cancel</button>\n    </div>\n    </>\n  )\n}\n\nexport default Togglable","import React, { useState } from \"react\"\nimport noteService from './../services/notes'\n\nconst NoteForm = ({ addNote }) => {\n  const [newNote, setNewNote] = useState('')\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n /*  \n const addNote = (event) => {\n    event.preventDefault()\n    let noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n  \n    noteService.create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  } */\n\n\n\n  return (\n    <>\n    <h2>Create a new note</h2>\n    <form onSubmit={addNote} >\n      <input value={newNote} onChange={handleChange} placeholder='New note' />\n      <button type='submit'>Save</button>\n    </form>\n    </>\n  )\n}\n\n\n export default NoteForm","import React from \"react\"\n\n  const LoginForm = ({\n    handleLogin,\n    handleUsernameChange,\n    handlePasswordChange,\n    username,\n    password,\n    loginVisible\n  }) => {\n\n    return (\n      <form onSubmit={handleLogin}>\n          <div>\n            Username  \n            <input type='text'\n            value={ username }\n            name='Username' \n            onChange={({ target }) => handleUsernameChange(target.value)} \n          />\n          </div>\n          <div>\n            Password  \n            <input type='text'\n            value={ password }\n            name='Password'\n            onChange={ ({ target }) => handlePasswordChange(target.value) } \n            />\n          </div>\n          <button type='submit'>login</button>\n        </form>\n      )\n    }\n\n  export default LoginForm","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login'\r\nimport Togglable from './components/Togglable'\r\nimport NoteForm from './components/NoteForm'\r\nimport LoginForm from './components/LoginForm'\r\n\r\nconst App = (props) => {\r\n\r\n  const [notes, setNotes] = useState([])\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n  const [loginVisible, setLoginVisible] = useState(false)\r\n\r\n  useEffect( () => {\r\n    noteService.getAll()\r\n    .then(initialNotes => {\r\n      setNotes(initialNotes)\r\n    }).catch(err => console.log(err))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON){\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log('logging in with ', username, password)\r\n    \r\n    try {\r\n      const user = await loginService.login({\r\n        username, password\r\n      })\r\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user))\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception){\r\n      setErrorMessage('Wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n\r\n  const toggleImportanceOf = (id) => {\r\n\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n         setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(err => {\r\n        alert(`the note '${note.content}' was already deleted from server`)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const notesToShow = (showAll ? notes : notes.filter(note => note.important))\r\n\r\n  const handleUsernameChange = (value) => {\r\n    setUsername(value)\r\n  }\r\n\r\n  const handlePasswordChange = (value) => {\r\n    setPassword(value)\r\n  }\r\n\r\n\r\n  const loginForm = () => {\r\n        \r\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\r\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\r\n\r\n\r\n    return (\r\n      <>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={() => setLoginVisible(true)}>Login</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        <LoginForm \r\n           username={username}\r\n           password={password}\r\n           handleUsernameChange={({target}) => setUsername(target.value)}\r\n           handlePasswordChange={({target}) => setPassword(target.value)}\r\n           handleLogin={handleLogin}\r\n           setNotes={setNotes}\r\n          />\r\n          <button onClick={() => {setLoginVisible(false)}}>Cancel</button>\r\n          </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const addNote = async (noteObject) => {\r\n    const returnedNote = await noteService.create(noteObject)\r\n    setNotes(notes.concat(returnedNote))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>  \r\n\r\n\r\n      { user === null \r\n      ? <LoginForm \r\n          handleLogin={handleLogin}\r\n          handleUsernameChange={handleUsernameChange}\r\n          handlePasswordChange={handlePasswordChange}\r\n          username={username}\r\n          password={password} \r\n        /> : <Togglable buttonLabel='new note'>\r\n              <NoteForm\r\n                  addNote={addNote}\r\n                />\r\n             </Togglable>\r\n           }\r\n\r\n      <div>\r\n        <button id='show-button' onClick={()=>setShowAll(!showAll)}>\r\n          Show {showAll ? 'important': 'all'}\r\n        </button>\r\n        \r\n      </div>\r\n      <ul>\r\n        {console.log('notes to show: ', notesToShow)}\r\n        {notesToShow.map((note, i) => \r\n            <Note key={i} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\n\r\n\r\nReactDOM.render( <App />, document.getElementById('root'))"],"sourceRoot":""}