{"version":3,"sources":["components/Note.js","services/notes.js","services/login.js","components/Togglable.js","components/NoteForm.js","components/LoginForm.js","App.js","index.js"],"names":["Note","note","toggleImportant","label","important","content","onClick","baseUrl","token","create","newObject","a","config","headers","Authorization","axios","post","response","data","getAll","get","then","update","id","put","catch","error","console","log","setToken","newToken","login","credentials","logout","window","localStorage","removeItem","Togglable","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","buttonLabel","children","NoteForm","createNote","newNote","setNewNote","onSubmit","event","preventDefault","Math","random","value","onChange","target","placeholder","type","LoginForm","handleLogin","handleUsernameChange","handlePasswordChange","username","password","name","App","notes","setNotes","showAll","setShowAll","setUsername","setPassword","setErrorMessage","user","setUser","useEffect","noteService","initialNotes","err","loggedUserJSON","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","notesToShow","filter","noteObject","returnedNote","concat","map","i","toggleImportance","find","n","changedNote","alert","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f18079a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportant }) => {\r\n\r\n  const label = note.important ? 'make not important': 'make important'\r\n\r\n  return (\r\n    <li>{note.content} \r\n    <button onClick={toggleImportant} >{label}</button></li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n    token = `bearer ${ newToken }`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (newObject) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config);\r\n    return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    let request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport default { getAll, create, update, setToken }\r\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst logout = () => {\n  window.localStorage.removeItem('loggedNoteappUser')\n}\n\nexport default { login, logout }","import React, { useState } from 'react'\n\nconst Togglable = (props) => {\n  \n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <>\n    <div style={hideWhenVisible}>\n      <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n    </div>\n    <div style={showWhenVisible}>\n      {props.children}\n      <button onClick={toggleVisibility}>cancel</button>\n    </div>\n    </>\n  )\n}\n\nexport default Togglable","import React, { useState } from \"react\"\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState('')\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n \n const addNote = (event) => {\n    event.preventDefault()\n    createNote({\n      content: newNote,\n      important: Math.random() > 0.5\n    })\n  }\n\n\n\n  return (\n    <>\n    <h2>Create a new note</h2>\n    <form onSubmit={addNote} >\n      <input value={newNote} onChange={handleChange} placeholder='New note' />\n      <button type='submit'>Save</button>\n    </form>\n    </>\n  )\n}\n\n\n export default NoteForm","import React from \"react\"\n\n  const LoginForm = ({\n    handleLogin,\n    handleUsernameChange,\n    handlePasswordChange,\n    username,\n    password,\n  }) => {\n\n    return (\n      <form onSubmit={handleLogin}>\n          <div>\n            Username  \n            <input type='text'\n            value={ username }\n            name='Username' \n            onChange={handleUsernameChange} \n          />\n          </div>\n          <div>\n            Password  \n            <input type='text'\n            value={ password }\n            name='Password'\n            onChange={handlePasswordChange} \n            />\n          </div>\n          <button type='submit'>login</button>\n        </form>\n      )\n    }\n\n  export default LoginForm","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport loginService from './services/login'\nimport Togglable from './components/Togglable'\nimport NoteForm from './components/NoteForm'\nimport LoginForm from './components/LoginForm'\n\nconst App = (props) => {\n\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect( () => {\n    noteService.getAll()\n    .then(initialNotes => {\n      setNotes(initialNotes)\n    }).catch(err => console.log(err))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with ', username, password)\n    \n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user))\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception){\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  const toggleImportanceOf = (id) => {\n\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n         setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(err => {\n        alert(`the note '${note.content}' was already deleted from server`)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const notesToShow = (showAll ? notes : notes.filter(note => note.important))\n\n\n  const loginForm = () => {\n        \n    return (\n      <Togglable buttonLabel='login'>\n        <LoginForm \n           username={username}\n           password={password}\n           handleUsernameChange={({target}) => setUsername(target.value)}\n           handlePasswordChange={({target}) => setPassword(target.value)}\n           handleLogin={handleLogin}\n           setNotes={setNotes}\n          />\n      </Togglable>\n    )\n  }\n  \n  const createNote = async (noteObject) => {\n    const returnedNote = await noteService.create(noteObject)\n    console.log('returned note: ', returnedNote)\n    setNotes(notes.concat(returnedNote.data))\n  }\n\n  const noteForm = () => {\n    return (\n      <Togglable buttonLabel='new note'>\n        <NoteForm\n          createNote={createNote}\n        />\n      </Togglable>\n\n    )\n  }\n\n\n\n  return (\n    <div>\n      <h1>Notes</h1>  \n\n      { \n        user === null \n        ? loginForm() \n        : noteForm()\n      }\n\n      <div>\n        <button id='show-button' onClick={()=>setShowAll(!showAll)}>\n          Show {showAll ? 'important': 'all'}\n        </button>\n        \n      </div>\n      <ul>\n        {console.log('notes to show: ', notesToShow)}\n        {notesToShow.map((note, i) => \n            <Note key={i} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\n\r\n\r\nReactDOM.render( <App />, document.getElementById('root'))"],"sourceRoot":""}