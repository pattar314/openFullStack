{"version":3,"sources":["components/AddForm.js","components/Entries.js","components/Notification.js","components/SearchArea.js","services/phonebook.services.js","App.js","index.js"],"names":["AddForm","props","onSubmit","handleSubmit","onChange","handleNameInput","value","newName","type","handlePhoneInput","newNumber","Entries","book","deleteEntry","console","log","map","entry","name","number","onClick","window","confirm","id","Notification","message","status","styles","wrapperStyles","display","width","height","margin","padding","successStyles","fontSize","color","failureStyles","className","style","SearchArea","handleSearchInput","baseUrl","axios","get","then","recieved","data","newEntry","post","delete","catch","err","updated","put","response","App","useState","persons","setPersons","setNewName","setNewNumber","setBook","setMessage","setStatus","useEffect","phonebookServices","initalPersons","handleMessage","messageBody","setTimeout","event","upperSearch","target","toUpperCase","found","filter","person","indexOf","preventDefault","newPerson","find","updatedPerson","clone","alert","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3f79410.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AddForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <div>name:  <input onChange={props.handleNameInput} value={props.newName} type='text' /></div>\r\n          <div>number: <input onChange={props.handlePhoneInput} value={props.newNumber} type='text' /></div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>    \r\n    )\r\n}\r\n\r\nexport default AddForm\r\n","import React from 'react'\r\n\r\nconst Entries = ({book, deleteEntry}) => {\r\n   \r\n    console.log('book: ', book)\r\n    return (\r\n        <div>\r\n            {book.map(entry => <div key={entry.id}>{entry.name}: {entry.number} <button onClick={() => (window.confirm('Are you sure you would like to delete this entry?') ? deleteEntry(entry.id) : null)} >Delete</button> </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Entries\r\n","import React from \"react\";\r\n\r\nconst Notification = ({message, status}) => {\r\n    let styles = {\r\n        wrapperStyles : {\r\n            display: 'flex',\r\n            width: '90vw',\r\n            height: '15vh',\r\n            margin: 'auto',\r\n            padding: '1em'\r\n\r\n        },\r\n        successStyles: {\r\n            fontSize: '2em',\r\n            color: 'green',\r\n            margin: 'auto'\r\n        },\r\n        failureStyles : {\r\n            fontSize: '2em',\r\n            color: 'red',\r\n            margin: 'auto'            \r\n        }\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <div className='notification-wrapper' style={styles.wrapperStyles}>\r\n            <div className='notification-body' style={status === \"success\" ? styles.successStyles : styles.failureStyles}>{message}</div></div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst SearchArea = (props) => {\r\n    return (\r\n        <div>Show entries: <input onChange={props.handleSearchInput} /></div>\r\n    )\r\n}\r\n\r\nexport default SearchArea\r\n","import axios from \"axios\"\r\nimport mongoose from \"mongoose\"\r\n\r\n\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\n// create\r\nconst createEntry = (newEntry) => {\r\n    let request = axios.post(baseUrl, newEntry).then(data => data)\r\n    return request\r\n}\r\n\r\n\r\n// read all\r\nconst readAll = () => {\r\n    let entries = axios.get(baseUrl)\r\n    return entries.then( recieved => recieved.data)\r\n}\r\n\r\n// read one\r\n\r\nconst readOne = (id) => {\r\n    let data = axios.get(`${baseUrl}/${id}`)\r\n    console.log(`read one: ${data}`)\r\n    return data\r\n}\r\n\r\n\r\nconst updateEntry = (id, entry) => {\r\n    console.log('update entry: ', entry)\r\n    let updated = axios.put(`${baseUrl}/${id}`, entry)\r\n    console.log(`updated: ${updated}`)\r\n    return updated.then(response => response.data)\r\n    }\r\n\r\nconst deleteEntry = (id) => {\r\n    axios.delete(`${baseUrl}/${id}`).catch(err => console.log('there was an error: ', err.message))\r\n    return console.log('entry deleted')\r\n}\r\n\r\n\r\n\r\nexport default { readAll, readOne, createEntry, deleteEntry, updateEntry}\r\n\r\n//mongodb+srv://pattarlearn:greensage%40420@mongolearn.p32sk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport AddForm from './components/AddForm';\nimport Entries from './components/Entries';\nimport Notification from './components/Notification';\nimport SearchArea from './components/SearchArea';\nimport phonebookServices from './services/phonebook.services.js';\n\nfunction App() {\n  \n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [book, setBook] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [status, setStatus] = useState(null)\n\nuseEffect(() => {\n  phonebookServices.readAll()\n  .then(initalPersons => {\n    setPersons(initalPersons);\n    console.log('initial persons: ', initalPersons)\n  })\n}, [])\n\n\n  const handleNameInput = (event) => {\n    console.log(newName)\n    setNewName(event.target.value);\n  }\n\n  const handlePhoneInput = (event) => {\n    console.log(newNumber)\n    setNewNumber(event.target.value);\n  }\n\n  const handleSearchInput = (event) => {\n    let upperSearch = event.target.value.toUpperCase();\n    let found = persons.filter((person) => (person.name.toUpperCase().indexOf(upperSearch) !== -1 ));\n    (upperSearch === '' ? setBook(false) : setBook(found))\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    let found = persons.find((person) => person.name === newName)\n  \n    if(found){\n      (window.confirm(`The entry for ${newName} already exists would you like to update the number?`)\n      ? phonebookServices.updateEntry(found.id, newPerson).then(updatedPerson => {\n        let clone = persons.map(person => person.name === newName ? {...person, number: newNumber} : person)\n        console.log('updated clone: ', clone)\n        setPersons(clone)\n        handleMessage('Entry updated', \"success\")\n      }).catch((err) => {\n        console.log(\"There was an error: \", err.message)\n        setMessage(\"This entry is no longer on the server\", \"failure\")\n      })\n      : window.alert('Number not updated') );\n    } else {\n      phonebookServices.createEntry(newPerson)\n      .then(data => {\n        console.log('new person: ', newPerson)\n        setPersons(persons.concat(newPerson))\n        console.log('Added entry', data)\n        handleMessage('Entry created', \"success\")\n      })\n      .catch(error => {\n        console.log('error data', error.response.data.error)\n        handleMessage(error.response.data.error, 'failure')\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleMessage = (messageBody, status) => {\n    setMessage(messageBody);\n    setStatus(status)\n    setTimeout(()=> {\n      setMessage(null);\n      setStatus(null)\n    }, 2000)\n  }\n\n  const deleteEntry = (id) => {\n    phonebookServices.deleteEntry(id);\n    handleMessage('Entry deleted', 'failure')\n    setPersons(persons.filter(person => person.id !== id))\n    }\n  \n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n      <Notification message={message} status={status} />\n      <SearchArea handleSearchInput={handleSearchInput} />\n      <h2>Add new</h2>\n      <AddForm \n      handleSubmit={handleSubmit}\n      handleNameInput={handleNameInput}\n      handlePhoneInput={handlePhoneInput}\n      newName={newName}\n      newNumber={newNumber}\n      />    \n      <h2>Entries</h2>\n        <Entries book={ book ? book : persons } deleteEntry={deleteEntry} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}